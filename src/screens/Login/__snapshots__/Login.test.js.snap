// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match the snapshot 1`] = `
<View
  style={
    Object {
      "backgroundColor": undefined,
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        Object {
          "backgroundColor": undefined,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "marginBottom": 80,
          "width": "75%",
        }
      }
    >
      <Image
        accessibilityIgnoresInvertColors={true}
        source={
          Object {
            "testUri": "../../../src/assets/logo/logo.png",
          }
        }
        style={
          Object {
            "maxWidth": "100%",
            "resizeMode": "contain",
          }
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "borderBottomWidth": 0.5,
            "marginBottom": 16,
            "paddingBottom": 8,
            "paddingTop": 24,
          }
        }
      >
        <Text
          onLayout={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "left": 8,
                "position": "absolute",
                "top": 0,
              },
              Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                  Object {
                    "translateX": -0,
                  },
                  Object {
                    "translateY": 24,
                  },
                ],
              },
            ]
          }
        >
          Email
        </Text>
        <TextInput
          accessibilityHint="Enter your email"
          accessibilityLabel="Email"
          autoCapitalize="none"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
          value=""
        />
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 0.5,
            "marginBottom": 16,
            "paddingBottom": 8,
            "paddingTop": 24,
          }
        }
      >
        <Text
          onLayout={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "left": 8,
                "position": "absolute",
                "top": 0,
              },
              Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                  Object {
                    "translateX": -0,
                  },
                  Object {
                    "translateY": 24,
                  },
                ],
              },
            ]
          }
        >
          Password
        </Text>
        <TextInput
          accessibilityHint="Enter your password"
          accessibilityLabel="Password"
          autoCapitalize="none"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          secureTextEntry={true}
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
          textContentType="password"
          value=""
        />
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgb(0, 122, 255)",
            "borderColor": "rgb(0, 122, 255)",
            "borderRadius": 3,
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "marginTop": 24,
            "opacity": 1,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": undefined,
              },
              Object {
                "fontSize": 18,
                "fontWeight": "700",
              },
              null,
            ]
          }
        >
          Login
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "marginBottom": 40,
        "marginTop": "auto",
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 16,
            "fontWeight": "400",
          },
          Object {
            "color": undefined,
          },
        ]
      }
    >
      Trouble logging in? 
      <Text
        style={
          Array [
            Object {
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {
              "color": undefined,
            },
          ]
        }
      >
        Contact Razor support
      </Text>
    </Text>
  </View>
</View>
`;
